// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechnologyCenter.Web.Data;

#nullable disable

namespace TechnologyCenter.Web.Migrations
{
    [DbContext(typeof(REMVC3Context))]
    partial class REMVC3ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApartmentNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("EasternBorder")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("EasternBorderLength")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<int?>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<string>("FloorNumberText")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MaritimeBorder")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("MaritimeBorderLength")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PropertyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SyncStatus")
                        .HasColumnType("int");

                    b.Property<int?>("SyncStatusSa")
                        .HasColumnType("int");

                    b.Property<string>("TribalBorder")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("TribalBorderLength")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("UniqueMark")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WesternBorder")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("WesternBorderLength")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValueSql("(N'')");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DistrictId" }, "IX_Addresses_DistrictId");

                    b.HasIndex(new[] { "RegionId" }, "IX_Addresses_RegionId");

                    b.HasIndex(new[] { "RequestId" }, "IX_Addresses_RequestId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Apiconsumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationSecretKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PrivateKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PublicKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Apiconsumers");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.AreaType", b =>
                {
                    b.Property<int>("AreaTypeReference")
                        .HasColumnType("int")
                        .HasColumnName("AreaType_Reference");

                    b.Property<string>("AreaTypeArabicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AreaType_ArabicName");

                    b.Property<string>("AreaTypeEnglishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AreaType_EnglishName");

                    b.HasKey("AreaTypeReference");

                    b.ToTable("AreaType", (string)null);
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.AspNetRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedName" }, "RoleNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.AspNetRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetRoleClaims_RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.AspNetUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("ArabicFullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("FirstLogIn")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MakerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SyncStatus")
                        .HasColumnType("int");

                    b.Property<int?>("SyncStatusSa")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "AddressId" }, "IX_AspNetUsers_AddressId");

                    b.HasIndex(new[] { "MakerId" }, "IX_AspNetUsers_MakerId");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.AspNetUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserClaims_UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserLogins_UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.AspNetUserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.CanceledRequestPriceDifferenceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("AreaDifference")
                        .HasColumnType("float");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasFawryPaymentTransactions")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<double>("SubUnitAreaDifference")
                        .HasColumnType("float");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CanceledRequestPriceDifferenceLogs");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Complaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComplaintStatus")
                        .HasColumnType("int");

                    b.Property<int>("ComplaintType")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MakerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(N'0f0a1987-5b8e-4632-8b14-f4ca7c8b3316')");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "MakerId" }, "IX_Complaints_MakerId");

                    b.HasIndex(new[] { "RequestId" }, "IX_Complaints_RequestId");

                    b.HasIndex(new[] { "UserId" }, "IX_Complaints_UserId");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.ComplaintReply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComplaintId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MakerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ComplaintId" }, "IX_ComplaintReplies_ComplaintId");

                    b.HasIndex(new[] { "MakerId" }, "IX_ComplaintReplies_MakerId");

                    b.ToTable("ComplaintReplies");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RegionId" }, "IX_Districts_RegionId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.FrequentlyAskedQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AnswerArabic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuestionArabic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionEnglish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "GroupId" }, "IX_FrequentlyAskedQuestions_GroupId");

                    b.ToTable("FrequentlyAskedQuestions");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Governorate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CrewTransferCost")
                        .HasColumnType("float");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Governorates");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.InquiryRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InquiryRequestStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RequestId" }, "IX_InquiryRequests_RequestId")
                        .IsUnique();

                    b.ToTable("InquiryRequests");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ArabicAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishAddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("Gpslocation")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GPSLocation")
                        .HasDefaultValueSql("(N'')");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((101))");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RegionId" }, "IX_Offices_RegionId");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.OrderStatus", b =>
                {
                    b.Property<string>("OrderStatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrderStatusReference")
                        .HasColumnType("int");

                    b.ToTable("OrderStatus", (string)null);
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.PaymentTrasnsaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FawryAccountType")
                        .HasColumnType("int");

                    b.Property<double?>("FawryFees")
                        .HasColumnType("float");

                    b.Property<int?>("InquiryRequestId")
                        .HasColumnType("int");

                    b.Property<Guid>("MerchantRefNum")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<double?>("PaymentAmount")
                        .HasColumnType("float");

                    b.Property<int?>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RefundedAmount")
                        .HasColumnType("float");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("StatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SyncStatus")
                        .HasColumnType("int");

                    b.Property<int?>("SyncStatusSa")
                        .HasColumnType("int");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "InquiryRequestId" }, "IX_PaymentTrasnsactions_InquiryRequestId");

                    b.HasIndex(new[] { "RequestId" }, "IX_PaymentTrasnsactions_RequestId");

                    b.HasIndex(new[] { "UserId" }, "IX_PaymentTrasnsactions_UserId");

                    b.ToTable("PaymentTrasnsactions");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.PaymentTrasnsactionRequestPriceDifference", b =>
                {
                    b.Property<int>("PaymentTrasnsactionsId")
                        .HasColumnType("int");

                    b.Property<int>("RequestPriceDifferencesId")
                        .HasColumnType("int");

                    b.Property<int?>("SyncStatus")
                        .HasColumnType("int");

                    b.Property<int?>("SyncStatusSa")
                        .HasColumnType("int");

                    b.HasKey("PaymentTrasnsactionsId", "RequestPriceDifferencesId");

                    b.HasIndex(new[] { "RequestPriceDifferencesId" }, "IX_PaymentTrasnsactionRequestPriceDifference_RequestPriceDifferencesId");

                    b.ToTable("PaymentTrasnsactionRequestPriceDifference", (string)null);
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.PaymentTrasnsactionShippingOrder", b =>
                {
                    b.Property<int>("PaymentTrasnsactionsId")
                        .HasColumnType("int");

                    b.Property<int>("ShippingOrdersId")
                        .HasColumnType("int");

                    b.Property<int?>("SyncStatus")
                        .HasColumnType("int");

                    b.Property<int?>("SyncStatusSa")
                        .HasColumnType("int");

                    b.HasKey("PaymentTrasnsactionsId", "ShippingOrdersId");

                    b.HasIndex(new[] { "ShippingOrdersId" }, "IX_PaymentTrasnsactionShippingOrder_ShippingOrdersId");

                    b.ToTable("PaymentTrasnsactionShippingOrder", (string)null);
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.QuestionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuestionGroups");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.RefundRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IBAN")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("MakerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherRefundReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentTrasnsactionId")
                        .HasColumnType("int");

                    b.Property<string>("RefundManagerComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefundReason")
                        .HasColumnType("int");

                    b.Property<int>("RefundStatus")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("ReviewerComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ssn")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("SSN");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(N'')");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "MakerId" }, "IX_RefundRequests_MakerId");

                    b.HasIndex(new[] { "PaymentTrasnsactionId" }, "IX_RefundRequests_PaymentTrasnsactionId");

                    b.HasIndex(new[] { "RequestId" }, "IX_RefundRequests_RequestId");

                    b.HasIndex(new[] { "UserId" }, "IX_RefundRequests_UserId");

                    b.ToTable("RefundRequests");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("GovernorateId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsNotMilitary")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "GovernorateId" }, "IX_Regions_GovernorateId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<int?>("AreaType")
                        .HasColumnType("int");

                    b.Property<string>("BuildingArea")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CrewTransferCost")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("HasInquiryRequest")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<bool?>("HasPriceDifference")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<bool?>("IsArchived")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<bool?>("IsPaid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<string>("LandArea")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("RequestNumber")
                        .HasMaxLength(900)
                        .HasColumnType("nvarchar(900)");

                    b.Property<int>("RequestStatus")
                        .HasColumnType("int");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubUnitType")
                        .HasColumnType("int");

                    b.Property<double?>("SubUnitTypeArea")
                        .HasColumnType("float");

                    b.Property<int?>("SyncStatus")
                        .HasColumnType("int");

                    b.Property<int?>("SyncStatusSa")
                        .HasColumnType("int");

                    b.Property<int>("UnitType")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("(N'')");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_Requests_UserId");

                    b.HasIndex(new[] { "UserId", "RequestNumber" }, "Request_Number")
                        .IsUnique()
                        .HasFilter("[RequestNumber] IS NOT NULL");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.RequestAreaDifferenceStatus", b =>
                {
                    b.Property<int>("RequestAreaDifferenceReference")
                        .HasColumnType("int");

                    b.Property<string>("RequestAreaDifferenceStatus1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RequestAreaDifferenceStatus");

                    b.ToTable("RequestAreaDifferenceStatus", (string)null);
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.RequestPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("AreaSizeFrom")
                        .HasColumnType("float");

                    b.Property<double>("AreaSizeUpTo")
                        .HasColumnType("float");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("UnitType")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequestPrices");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.RequestPriceDifference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("AreaDifference")
                        .HasColumnType("float");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RequestAreaDifferenceStatus")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<double?>("SubUnitAreaDifference")
                        .HasColumnType("float");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RequestId" }, "IX_RequestPriceDifferences_RequestId");

                    b.ToTable("RequestPriceDifferences");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.RequestStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RequestStatusArabicName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RequestStatus_ArabicName");

                    b.Property<string>("RequestStatusEnglishName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RequestStatus_EnglishName");

                    b.Property<int>("RequestStatusReference")
                        .HasColumnType("int")
                        .HasColumnName("RequestStatus_Reference");

                    b.HasKey("Id");

                    b.ToTable("RequestStatus", (string)null);
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.RequestStatusChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewStatus")
                        .HasColumnType("int");

                    b.Property<int>("PreviousStatus")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StatusChangeDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("('0001-01-01T00:00:00.0000000+02:00')");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RequestId" }, "IX_RequestStatusChanges_RequestId");

                    b.ToTable("RequestStatusChanges");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.RequestUnitTypeChangeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NewAreaType")
                        .HasColumnType("int");

                    b.Property<int?>("NewSubUnitType")
                        .HasColumnType("int");

                    b.Property<double?>("NewSubUnitTypeArea")
                        .HasColumnType("float");

                    b.Property<int>("NewUnitType")
                        .HasColumnType("int");

                    b.Property<int?>("OldAreaType")
                        .HasColumnType("int");

                    b.Property<int?>("OldSubUnitType")
                        .HasColumnType("int");

                    b.Property<double?>("OldSubUnitTypeArea")
                        .HasColumnType("float");

                    b.Property<int>("OldUnitType")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("RequestNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequestUnitTypeChangeLogs");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.ShippingOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApartmentNumber")
                        .HasColumnType("int");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("EditCertificateInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ExtraCopiesPrice")
                        .HasColumnType("float");

                    b.Property<int?>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfCopies")
                        .HasColumnType("int");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int?>("PropertyNumber")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((101))");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int>("ShippingOrderStatus")
                        .HasColumnType("int");

                    b.Property<double>("ShippingPrice")
                        .HasColumnType("float");

                    b.Property<int>("ShippingType")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SyncStatus")
                        .HasColumnType("int");

                    b.Property<int?>("SyncStatusSa")
                        .HasColumnType("int");

                    b.Property<string>("UniqueMark")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DistrictId" }, "IX_ShippingOrders_DistrictId");

                    b.HasIndex(new[] { "OfficeId" }, "IX_ShippingOrders_OfficeId");

                    b.HasIndex(new[] { "RegionId" }, "IX_ShippingOrders_RegionId");

                    b.HasIndex(new[] { "RequestId" }, "IX_ShippingOrders_RequestId");

                    b.ToTable("ShippingOrders");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.ShippingOrderStatus", b =>
                {
                    b.Property<int>("ShippingOrderRefenrece")
                        .HasColumnType("int");

                    b.Property<string>("ShippingOrderStatus1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ShippingOrderStatus");

                    b.ToTable("ShippingOrderStatus", (string)null);
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.ShippingPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ShippingType")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShippingPrices");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.SubUnitTypeEnumTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SubUnitTypeArabicName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SubUnitType_ArabicName");

                    b.Property<string>("SubUnitTypeEnglishName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SubUnitType_EnglishName");

                    b.Property<int>("SubUnitTypeReference")
                        .HasColumnType("int")
                        .HasColumnName("SubUnitType_Reference");

                    b.Property<int>("UnitTypeMainReference")
                        .HasColumnType("int")
                        .HasColumnName("UnitType_MainReference");

                    b.HasKey("Id");

                    b.ToTable("SubUnitTypeEnumTable", (string)null);
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.SyncLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Identifier")
                        .HasColumnType("int");

                    b.Property<string>("LogDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfAddressesCreated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfAddressesUpdated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPaymentTransactionsCreated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPaymentTransactionsUpdated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPreviousDays")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRequestPriceDifferenceCreated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRequestPriceDifferenceUpdated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRequestsCreated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRequestsUpdated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfShippingOrdersCreated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfShippingOrdersUpdated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfUserAddressesCreated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfUserAddressesUpdated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfUserProfilesCreated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfUserProfilesUpdated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfUsersCreated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfUsersUpdated")
                        .HasColumnType("int");

                    b.Property<int>("SyncLogStatus")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SyncLogs");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.SystemIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MoreInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SystemIssueCreator")
                        .HasColumnType("int");

                    b.Property<int>("SystemIssueStatus")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemIssues");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.TransferRequestLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasComplaintsTransfered")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPaymentTransactionsTransfered")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfComplaintsTransfered")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPaymentTransactionsTransfered")
                        .HasColumnType("int");

                    b.Property<string>("OldUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TransferRequestLogs");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.UnitTypeEnumTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("UnitTypeArabicName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("UnitType_ArabicName");

                    b.Property<string>("UnitTypeEnglishName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("UnitType_EnglishName");

                    b.Property<int>("UnitTypeReference")
                        .HasColumnType("int")
                        .HasColumnName("UnitType_Reference");

                    b.HasKey("Id");

                    b.ToTable("UnitTypeEnumTable", (string)null);
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.UserAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("SyncStatus")
                        .HasColumnType("int");

                    b.Property<int?>("SyncStatusSa")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DistrictId" }, "IX_UserAddresses_DistrictId");

                    b.HasIndex(new[] { "RegionId" }, "IX_UserAddresses_RegionId");

                    b.HasIndex(new[] { "UserProfileId" }, "IX_UserAddresses_UserProfileId")
                        .IsUnique();

                    b.ToTable("UserAddresses");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Createdby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasDefaultValueSql("(N'desc')");

                    b.Property<bool?>("HasAnotherNumber")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<bool?>("HasWhatsApp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<bool?>("HasWhatsApp2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhoneNumberType")
                        .HasColumnType("int");

                    b.Property<int?>("PhoneNumberType2")
                        .HasColumnType("int");

                    b.Property<int?>("SyncStatus")
                        .HasColumnType("int");

                    b.Property<int?>("SyncStatusSa")
                        .HasColumnType("int");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("TelephoneNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_UserProfiles_UserId")
                        .IsUnique();

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.AspNetRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechnologyCenter.Web.Models.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Address", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.District", "District")
                        .WithMany("Addresses")
                        .HasForeignKey("DistrictId");

                    b.HasOne("TechnologyCenter.Web.Models.Region", "Region")
                        .WithMany("Addresses")
                        .HasForeignKey("RegionId")
                        .IsRequired();

                    b.HasOne("TechnologyCenter.Web.Models.Request", "Request")
                        .WithOne("Address")
                        .HasForeignKey("TechnologyCenter.Web.Models.Address", "RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Region");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.AspNetRoleClaim", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.AspNetRole", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.AspNetUser", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.Address", "Address")
                        .WithMany("AspNetUsers")
                        .HasForeignKey("AddressId");

                    b.HasOne("TechnologyCenter.Web.Models.AspNetUser", "Maker")
                        .WithMany("InverseMaker")
                        .HasForeignKey("MakerId");

                    b.Navigation("Address");

                    b.Navigation("Maker");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.AspNetUserClaim", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.AspNetUser", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.AspNetUserLogin", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.AspNetUser", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.AspNetUserToken", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.AspNetUser", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Complaint", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.AspNetUser", "Maker")
                        .WithMany("ComplaintMakers")
                        .HasForeignKey("MakerId")
                        .IsRequired();

                    b.HasOne("TechnologyCenter.Web.Models.Request", "Request")
                        .WithMany("Complaints")
                        .HasForeignKey("RequestId");

                    b.HasOne("TechnologyCenter.Web.Models.AspNetUser", "User")
                        .WithMany("ComplaintUsers")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Maker");

                    b.Navigation("Request");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.ComplaintReply", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.Complaint", "Complaint")
                        .WithMany("ComplaintReplies")
                        .HasForeignKey("ComplaintId")
                        .IsRequired();

                    b.HasOne("TechnologyCenter.Web.Models.AspNetUser", "Maker")
                        .WithMany("ComplaintReplies")
                        .HasForeignKey("MakerId")
                        .IsRequired();

                    b.Navigation("Complaint");

                    b.Navigation("Maker");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.District", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.Region", "Region")
                        .WithMany("Districts")
                        .HasForeignKey("RegionId")
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.FrequentlyAskedQuestion", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.QuestionGroup", "Group")
                        .WithMany("FrequentlyAskedQuestions")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.InquiryRequest", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.Request", "Request")
                        .WithOne("InquiryRequest")
                        .HasForeignKey("TechnologyCenter.Web.Models.InquiryRequest", "RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Office", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.Region", "Region")
                        .WithMany("Offices")
                        .HasForeignKey("RegionId")
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.PaymentTrasnsaction", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.InquiryRequest", "InquiryRequest")
                        .WithMany("PaymentTrasnsactions")
                        .HasForeignKey("InquiryRequestId");

                    b.HasOne("TechnologyCenter.Web.Models.Request", "Request")
                        .WithMany("PaymentTrasnsactions")
                        .HasForeignKey("RequestId")
                        .IsRequired();

                    b.HasOne("TechnologyCenter.Web.Models.AspNetUser", "User")
                        .WithMany("PaymentTrasnsactions")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("InquiryRequest");

                    b.Navigation("Request");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.PaymentTrasnsactionRequestPriceDifference", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.PaymentTrasnsaction", "PaymentTrasnsactions")
                        .WithMany("PaymentTrasnsactionRequestPriceDifferences")
                        .HasForeignKey("PaymentTrasnsactionsId")
                        .IsRequired();

                    b.HasOne("TechnologyCenter.Web.Models.RequestPriceDifference", "RequestPriceDifferences")
                        .WithMany("PaymentTrasnsactionRequestPriceDifferences")
                        .HasForeignKey("RequestPriceDifferencesId")
                        .IsRequired();

                    b.Navigation("PaymentTrasnsactions");

                    b.Navigation("RequestPriceDifferences");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.PaymentTrasnsactionShippingOrder", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.PaymentTrasnsaction", "PaymentTrasnsactions")
                        .WithMany("PaymentTrasnsactionShippingOrders")
                        .HasForeignKey("PaymentTrasnsactionsId")
                        .IsRequired();

                    b.HasOne("TechnologyCenter.Web.Models.ShippingOrder", "ShippingOrders")
                        .WithMany("PaymentTrasnsactionShippingOrders")
                        .HasForeignKey("ShippingOrdersId")
                        .IsRequired();

                    b.Navigation("PaymentTrasnsactions");

                    b.Navigation("ShippingOrders");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.RefundRequest", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.AspNetUser", "Maker")
                        .WithMany("RefundRequestMakers")
                        .HasForeignKey("MakerId");

                    b.HasOne("TechnologyCenter.Web.Models.PaymentTrasnsaction", "PaymentTrasnsaction")
                        .WithMany("RefundRequests")
                        .HasForeignKey("PaymentTrasnsactionId")
                        .IsRequired();

                    b.HasOne("TechnologyCenter.Web.Models.Request", "Request")
                        .WithMany("RefundRequests")
                        .HasForeignKey("RequestId")
                        .IsRequired();

                    b.HasOne("TechnologyCenter.Web.Models.AspNetUser", "User")
                        .WithMany("RefundRequestUsers")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Maker");

                    b.Navigation("PaymentTrasnsaction");

                    b.Navigation("Request");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Region", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.Governorate", "Governorate")
                        .WithMany("Regions")
                        .HasForeignKey("GovernorateId")
                        .IsRequired();

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Request", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.AspNetUser", "User")
                        .WithMany("Requests")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.RequestPriceDifference", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.Request", "Request")
                        .WithMany("RequestPriceDifferences")
                        .HasForeignKey("RequestId")
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.RequestStatusChange", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.Request", "Request")
                        .WithMany("RequestStatusChanges")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.ShippingOrder", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.District", "District")
                        .WithMany("ShippingOrders")
                        .HasForeignKey("DistrictId");

                    b.HasOne("TechnologyCenter.Web.Models.Office", "Office")
                        .WithMany("ShippingOrders")
                        .HasForeignKey("OfficeId");

                    b.HasOne("TechnologyCenter.Web.Models.Region", "Region")
                        .WithMany("ShippingOrders")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechnologyCenter.Web.Models.Request", "Request")
                        .WithMany("ShippingOrders")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Office");

                    b.Navigation("Region");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.UserAddress", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.District", "District")
                        .WithMany("UserAddresses")
                        .HasForeignKey("DistrictId");

                    b.HasOne("TechnologyCenter.Web.Models.Region", "Region")
                        .WithMany("UserAddresses")
                        .HasForeignKey("RegionId")
                        .IsRequired();

                    b.HasOne("TechnologyCenter.Web.Models.UserProfile", "UserProfile")
                        .WithOne("UserAddress")
                        .HasForeignKey("TechnologyCenter.Web.Models.UserAddress", "UserProfileId")
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("Region");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.UserProfile", b =>
                {
                    b.HasOne("TechnologyCenter.Web.Models.AspNetUser", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("TechnologyCenter.Web.Models.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Address", b =>
                {
                    b.Navigation("AspNetUsers");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.AspNetRole", b =>
                {
                    b.Navigation("AspNetRoleClaims");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.AspNetUser", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserTokens");

                    b.Navigation("ComplaintMakers");

                    b.Navigation("ComplaintReplies");

                    b.Navigation("ComplaintUsers");

                    b.Navigation("InverseMaker");

                    b.Navigation("PaymentTrasnsactions");

                    b.Navigation("RefundRequestMakers");

                    b.Navigation("RefundRequestUsers");

                    b.Navigation("Requests");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Complaint", b =>
                {
                    b.Navigation("ComplaintReplies");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.District", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("ShippingOrders");

                    b.Navigation("UserAddresses");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Governorate", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.InquiryRequest", b =>
                {
                    b.Navigation("PaymentTrasnsactions");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Office", b =>
                {
                    b.Navigation("ShippingOrders");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.PaymentTrasnsaction", b =>
                {
                    b.Navigation("PaymentTrasnsactionRequestPriceDifferences");

                    b.Navigation("PaymentTrasnsactionShippingOrders");

                    b.Navigation("RefundRequests");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.QuestionGroup", b =>
                {
                    b.Navigation("FrequentlyAskedQuestions");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Region", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Districts");

                    b.Navigation("Offices");

                    b.Navigation("ShippingOrders");

                    b.Navigation("UserAddresses");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.Request", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Complaints");

                    b.Navigation("InquiryRequest");

                    b.Navigation("PaymentTrasnsactions");

                    b.Navigation("RefundRequests");

                    b.Navigation("RequestPriceDifferences");

                    b.Navigation("RequestStatusChanges");

                    b.Navigation("ShippingOrders");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.RequestPriceDifference", b =>
                {
                    b.Navigation("PaymentTrasnsactionRequestPriceDifferences");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.ShippingOrder", b =>
                {
                    b.Navigation("PaymentTrasnsactionShippingOrders");
                });

            modelBuilder.Entity("TechnologyCenter.Web.Models.UserProfile", b =>
                {
                    b.Navigation("UserAddress");
                });
#pragma warning restore 612, 618
        }
    }
}
